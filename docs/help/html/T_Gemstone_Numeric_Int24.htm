<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Int24 Structure</title><meta name="Title" content="Int24" /><meta name="Help.Id" content="T:Gemstone.Numeric.Int24" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.Numeric" /><meta name="guid" content="T_Gemstone_Numeric_Int24" /><meta name="Description" content="Represents a 3-byte, 24-bit signed integer." /><meta name="tocFile" content="../toc/IDB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/numeric/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Numeric Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Int<wbr />24 Structure</h1><div class="summary">Represents a 3-byte, 24-bit signed integer.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Gemstone_Numeric.htm">Gemstone.Numeric</a><br /><strong>Assembly:</strong> Gemstone.Numeric (in Gemstone.Numeric.dll) Version: 1.0.143 -- Release Build+7b47d813842cdbcdc1945a56970c7676cbda1a3a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/numeric/blob/master/src/Gemstone.Numeric/Int24.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/numeric/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">SerializableAttribute</span>]
[<span class="noLink">TypeConverterAttribute</span>(<span class="keyword">typeof</span>(<a href="T_Gemstone_Numeric_Int24Converter.htm">Int24Converter</a>))]
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">Int24</span> : <span class="noLink">IComparable</span>, <span class="noLink">IFormattable</span>, 
	<span class="noLink">IConvertible</span>, <span class="noLink">IComparable</span>&lt;<span class="selflink">Int24</span>&gt;, <span class="noLink">IComparable</span>&lt;<span class="noLink">int</span>&gt;, <span class="noLink">IEquatable</span>&lt;<span class="selflink">Int24</span>&gt;, 
	<span class="noLink">IEquatable</span>&lt;<span class="noLink">int</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/numeric/blob/master/src/Gemstone.Numeric/Int24.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/numeric/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">SerializableAttribute</span>&gt;
&lt;<span class="noLink">TypeConverterAttribute</span>(<span class="keyword">GetType</span>(<a href="T_Gemstone_Numeric_Int24Converter.htm">Int24Converter</a>))&gt;
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">Int24</span>
	<span class="keyword">Implements</span> <span class="noLink">IComparable</span>, <span class="noLink">IFormattable</span>, <span class="noLink">IConvertible</span>, <span class="noLink">IComparable</span>(<span class="keyword">Of</span> <span class="selflink">Int24</span>), 
	<span class="noLink">IComparable</span>(<span class="keyword">Of</span> <span class="noLink">Integer</span>), <span class="noLink">IEquatable</span>(<span class="keyword">Of</span> <span class="selflink">Int24</span>), <span class="noLink">IEquatable</span>(<span class="keyword">Of</span> <span class="noLink">Integer</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/numeric/blob/master/src/Gemstone.Numeric/Int24.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/numeric/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">SerializableAttribute</span>]
[<span class="noLink">TypeConverterAttribute</span>(<span class="keyword">typeof</span>(<a href="T_Gemstone_Numeric_Int24Converter.htm">Int24Converter</a>))]
<span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">Int24</span> : <span class="noLink">IComparable</span>, 
	<span class="noLink">IFormattable</span>, <span class="noLink">IConvertible</span>, <span class="noLink">IComparable</span>&lt;<span class="selflink">Int24</span>&gt;, <span class="noLink">IComparable</span>&lt;<span class="noLink">int</span>&gt;, 
	<span class="noLink">IEquatable</span>&lt;<span class="selflink">Int24</span>&gt;, <span class="noLink">IEquatable</span>&lt;<span class="noLink">int</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/numeric/blob/master/src/Gemstone.Numeric/Int24.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/numeric/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="message">JavaScript supports the use of structures, but not the declaration of new ones.</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">ValueType</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Int24</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><span class="noLink">IComparable</span>, <span class="noLink">IComparable</span><span id="LSTFF2CA8FE_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink">Int24</span><span id="LSTFF2CA8FE_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="noLink">IComparable</span><span id="LSTFF2CA8FE_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int32</span><span id="LSTFF2CA8FE_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="noLink">IConvertible</span>, <span class="noLink">IEquatable</span><span id="LSTFF2CA8FE_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink">Int24</span><span id="LSTFF2CA8FE_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="noLink">IEquatable</span><span id="LSTFF2CA8FE_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int32</span><span id="LSTFF2CA8FE_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="noLink">IFormattable</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
            This class behaves like most other intrinsic signed integers but allows a 3-byte, 24-bit integer implementation
            that is often found in many digital-signal processing arenas and different kinds of protocol parsing.  A signed
            24-bit integer is typically used to save storage space on disk where its value range of -8388608 to 8388607 is
            sufficient, but the signed Int16 value range of -32768 to 32767 is too small.
            </p><p>
            This structure uses an Int32 internally for storage and most other common expected integer functionality, so using
            a 24-bit integer will not save memory.  However, if the 24-bit signed integer range (-8388608 to 8388607) suits your
            data needs you can save disk space by only storing the three bytes that this integer actually consumes.  You can do
            this by calling the Int24.GetBytes function to return a three byte binary array that can be serialized to the desired
            destination and then calling the Int24.GetValue function to restore the Int24 value from those three bytes.
            </p><p>
            All the standard operators for the Int24 have been fully defined for use with both Int24 and Int32 signed integers;
            you should find that without the exception Int24 can be compared and numerically calculated with an Int24 or Int32.
            Necessary casting should be minimal and typical use should be very simple - just as if you are using any other native
            signed integer.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAUGASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Gemstone_Numeric_Int24__ctor.htm">Int24(Int24)</a></td><td>Creates 24-bit signed integer from an existing 24-bit signed integer.</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24__ctor_2.htm">Int24(Int32)</a></td><td>Creates 24-bit signed integer from a 32-bit signed integer.</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24__ctor_1.htm">Int24(<span id="LSTFF2CA8FE_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTFF2CA8FE_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>Creates 24-bit signed integer from three bytes at a specified position in a byte array.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDYGASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Gemstone_Numeric_Int24_CompareTo.htm">CompareTo(Int24)</a></td><td>
            Compares this instance to a specified 24-bit signed integer and returns an indication of their
            relative values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_CompareTo_1.htm">CompareTo(Int32)</a></td><td>
            Compares this instance to a specified 32-bit signed integer and returns an indication of their
            relative values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_CompareTo_2.htm">CompareTo(Object)</a></td><td>
            Compares this instance to a specified object and returns an indication of their relative values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Equals.htm">Equals(Int24)</a></td><td>
            Returns a value indicating whether this instance is equal to a specified Int24 value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Equals_1.htm">Equals(Int32)</a></td><td>
            Returns a value indicating whether this instance is equal to a specified Int32 value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Equals_2.htm">Equals(Object)</a></td><td>
            Returns a value indicating whether this instance is equal to a specified object.
            <br />(Overrides <span class="noLink">ValueType<span id="LSTFF2CA8FE_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</span>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_GetBytes.htm">GetBytes<span id="LSTFF2CA8FE_11" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>Returns the Int24 value as an array of three bytes.</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_GetBytes_1.htm">GetBytes(Int24)</a></td><td>Returns the specified Int24 value as an array of three bytes.</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_GetHashCode.htm">GetHashCode</a></td><td>
            Returns the hash code for this instance.
            <br />(Overrides <span class="noLink">ValueType<span id="LSTFF2CA8FE_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LSTFF2CA8FE_13" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_GetTypeCode.htm">GetTypeCode</a></td><td>
            Returns the System.TypeCode for value type System.Int32 (there is no defined type code for an Int24).
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_GetValue.htm">GetValue</a></td><td>Returns a 24-bit signed integer from three bytes at a specified position in a byte array.</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Parse.htm">Parse(String)</a></td><td>
            Converts the string representation of a number to its 24-bit signed integer equivalent.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Parse_1.htm">Parse(String, NumberStyles)</a></td><td>
            Converts the string representation of a number in a specified style to its 24-bit signed integer equivalent.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Parse_3.htm">Parse(String, IFormatProvider)</a></td><td>
            Converts the string representation of a number in a specified culture-specific format to its 24-bit
            signed integer equivalent.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_Parse_2.htm">Parse(String, NumberStyles, IFormatProvider)</a></td><td>
            Converts the string representation of a number in a specified style and culture-specific format to its 24-bit
            signed integer equivalent.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_ToString.htm">ToString<span id="LSTFF2CA8FE_14" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Converts the numeric value of this instance to its equivalent string representation.
            <br />(Overrides <span class="noLink">ValueType<span id="LSTFF2CA8FE_15" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LSTFF2CA8FE_16" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_ToString_1.htm">ToString(IFormatProvider)</a></td><td>
            Converts the numeric value of this instance to its equivalent string representation using the
            specified culture-specific format information.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_ToString_2.htm">ToString(String)</a></td><td>
            Converts the numeric value of this instance to its equivalent string representation, using
            the specified format.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_ToString_3.htm">ToString(String, IFormatProvider)</a></td><td>
            Converts the numeric value of this instance to its equivalent string representation using the
            specified format and culture-specific format information.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_TryParse.htm">TryParse(String, Int24<span id="LSTFF2CA8FE_17" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Converts the string representation of a number to its 24-bit signed integer equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_TryParse_1.htm">TryParse(String, NumberStyles, IFormatProvider, Int24<span id="LSTFF2CA8FE_18" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Converts the string representation of a number in a specified style and culture-specific format to its
            24-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="ID5GASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="M_Gemstone_Numeric_Int24_op_Addition.htm">Addition(Int24, Int24)</a></td><td>
            Returns computed sum of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Addition_1.htm">Addition(Int24, Int32)</a></td><td>
            Returns computed sum of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Addition_2.htm">Addition(Int32, Int24)</a></td><td>
            Returns computed sum of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseAnd.htm">BitwiseAnd(Int24, Int24)</a></td><td>
            Returns logical bitwise AND of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseAnd_1.htm">BitwiseAnd(Int24, Int32)</a></td><td>
            Returns logical bitwise AND of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseAnd_2.htm">BitwiseAnd(Int32, Int24)</a></td><td>
            Returns logical bitwise AND of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseOr.htm">BitwiseOr(Int24, Int24)</a></td><td>
            Returns logical bitwise OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseOr_1.htm">BitwiseOr(Int24, Int32)</a></td><td>
            Returns logical bitwise OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_BitwiseOr_2.htm">BitwiseOr(Int32, Int24)</a></td><td>
            Returns logical bitwise OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Decrement.htm">Decrement(Int24)</a></td><td>
            Returns decremented value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Division.htm">Division(Int24, Int24)</a></td><td>
            Returns computed division of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Division_1.htm">Division(Int24, Int32)</a></td><td>
            Returns computed division of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Division_2.htm">Division(Int32, Int24)</a></td><td>
            Returns computed division of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Equality.htm">Equality(Int24, Int24)</a></td><td>
            Compares the two values for equality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Equality_1.htm">Equality(Int24, Int32)</a></td><td>
            Compares the two values for equality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Equality_2.htm">Equality(Int32, Int24)</a></td><td>
            Compares the two values for equality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_ExclusiveOr.htm">ExclusiveOr(Int24, Int24)</a></td><td>
            Returns logical bitwise exclusive-OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_ExclusiveOr_1.htm">ExclusiveOr(Int24, Int32)</a></td><td>
            Returns logical bitwise exclusive-OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_ExclusiveOr_2.htm">ExclusiveOr(Int32, Int24)</a></td><td>
            Returns logical bitwise exclusive-OR of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_3.htm"><span id="LSTFF2CA8FE_19" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Decimal to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_4.htm"><span id="LSTFF2CA8FE_20" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Double to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_5.htm"><span id="LSTFF2CA8FE_21" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Enum to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_2.htm"><span id="LSTFF2CA8FE_22" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Int24 to Byte)</a></td><td>
            Explicitly converts <span class="selflink">Int24</span> to <span class="noLink">Byte</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit.htm"><span id="LSTFF2CA8FE_23" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Int24 to Int16)</a></td><td>
            Explicitly converts <span class="selflink">Int24</span> to <span class="noLink">Int16</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_1.htm"><span id="LSTFF2CA8FE_24" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Int24 to UInt16)</a></td><td>
            Explicitly converts <span class="selflink">Int24</span> to <span class="noLink">UInt16</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_6.htm"><span id="LSTFF2CA8FE_25" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Int32 to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_7.htm"><span id="LSTFF2CA8FE_26" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Int64 to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_8.htm"><span id="LSTFF2CA8FE_27" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(Single to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Explicit_9.htm"><span id="LSTFF2CA8FE_28" data-languageSpecificText="cs=Explicit|vb=Narrowing|cpp=Explicit|nu=Explicit|fs=Explicit"></span>(String to Int24)</a></td><td>
            Explicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Exponent.htm">Exponent(Int24, Int24)</a></td><td>
            Returns result of first value raised to power of second value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Exponent_1.htm">Exponent(Int24, Int32)</a></td><td>
            Returns result of first value raised to power of second value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Exponent_2.htm">Exponent(Int32, Int24)</a></td><td>
            Returns result of first value raised to power of second value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_False.htm">False(Int24)</a></td><td>
            Returns true if value is equal to zero.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThan.htm">GreaterThan(Int24, Int24)</a></td><td>
            Returns true if left value is greater than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThan_1.htm">GreaterThan(Int24, Int32)</a></td><td>
            Returns true if left value is greater than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThan_2.htm">GreaterThan(Int32, Int24)</a></td><td>
            Returns true if left value is greater than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThanOrEqual.htm">GreaterThanOrEqual(Int24, Int24)</a></td><td>
            Returns true if left value is greater than or equal to right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThanOrEqual_1.htm">GreaterThanOrEqual(Int24, Int32)</a></td><td>
            Returns true if left value is greater than or equal to right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_GreaterThanOrEqual_2.htm">GreaterThanOrEqual(Int32, Int24)</a></td><td>
            Returns true if left value is greater than or equal to right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_8.htm"><span id="LSTFF2CA8FE_29" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Byte to Int24)</a></td><td>
            Implicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_9.htm"><span id="LSTFF2CA8FE_30" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Char to Int24)</a></td><td>
            Implicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_10.htm"><span id="LSTFF2CA8FE_31" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int16 to Int24)</a></td><td>
            Implicitly converts value to an <span class="selflink">Int24</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_6.htm"><span id="LSTFF2CA8FE_32" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to Decimal)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">Decimal</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_4.htm"><span id="LSTFF2CA8FE_33" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to Double)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">Double</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit.htm"><span id="LSTFF2CA8FE_34" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to Int32)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">Int32</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_2.htm"><span id="LSTFF2CA8FE_35" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to Int64)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">Int64</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_5.htm"><span id="LSTFF2CA8FE_36" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to Single)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">Single</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_7.htm"><span id="LSTFF2CA8FE_37" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to String)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">String</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_1.htm"><span id="LSTFF2CA8FE_38" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to UInt32)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">UInt32</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Implicit_3.htm"><span id="LSTFF2CA8FE_39" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(Int24 to UInt64)</a></td><td>
            Implicitly converts <span class="selflink">Int24</span> to <span class="noLink">UInt64</span>.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Increment.htm">Increment(Int24)</a></td><td>
            Returns incremented value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Inequality.htm">Inequality(Int24, Int24)</a></td><td>
            Compares the two values for inequality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Inequality_1.htm">Inequality(Int24, Int32)</a></td><td>
            Compares the two values for inequality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Inequality_2.htm">Inequality(Int32, Int24)</a></td><td>
            Compares the two values for inequality.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LeftShift.htm">LeftShift(Int24, Int32)</a></td><td>
            Returns value after left shifts of first value by the number of bits specified by second value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThan.htm">LessThan(Int24, Int24)</a></td><td>
            Returns true if left value is less than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThan_1.htm">LessThan(Int24, Int32)</a></td><td>
            Returns true if left value is less than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThan_2.htm">LessThan(Int32, Int24)</a></td><td>
            Returns true if left value is less than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThanOrEqual.htm">LessThanOrEqual(Int24, Int24)</a></td><td>
            Returns true if left value is less or equal to than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThanOrEqual_1.htm">LessThanOrEqual(Int24, Int32)</a></td><td>
            Returns true if left value is less or equal to than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_LessThanOrEqual_2.htm">LessThanOrEqual(Int32, Int24)</a></td><td>
            Returns true if left value is less or equal to than right value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Modulus.htm">Modulus(Int24, Int24)</a></td><td>
            Returns computed remainder after dividing first value by the second.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Modulus_1.htm">Modulus(Int24, Int32)</a></td><td>
            Returns computed remainder after dividing first value by the second.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Modulus_2.htm">Modulus(Int32, Int24)</a></td><td>
            Returns computed remainder after dividing first value by the second.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Multiply.htm">Multiply(Int24, Int24)</a></td><td>
            Returns computed product of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Multiply_1.htm">Multiply(Int24, Int32)</a></td><td>
            Returns computed product of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Multiply_2.htm">Multiply(Int32, Int24)</a></td><td>
            Returns computed product of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_OnesComplement.htm">OnesComplement(Int24)</a></td><td>
            Returns bitwise complement of value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_RightShift.htm">RightShift(Int24, Int32)</a></td><td>
            Returns value after right shifts of first value by the number of bits specified by second value.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Subtraction.htm">Subtraction(Int24, Int24)</a></td><td>
            Returns computed difference of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Subtraction_1.htm">Subtraction(Int24, Int32)</a></td><td>
            Returns computed difference of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_Subtraction_2.htm">Subtraction(Int32, Int24)</a></td><td>
            Returns computed difference of values.
            </td></tr><tr><td><a href="M_Gemstone_Numeric_Int24_op_True.htm">True(Int24)</a></td><td>
            Returns true if value is not zero.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDRGASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Gemstone_Numeric_Int24_BitMask.htm">BitMask</a></td><td>High byte bit-mask used when a 24-bit integer is stored within a 32-bit integer. This field is constant.</td></tr><tr><td><a href="F_Gemstone_Numeric_Int24_MaxValue.htm">MaxValue</a></td><td>
            Represents the largest possible value of an Int24. This field is constant.
            </td></tr><tr><td><a href="F_Gemstone_Numeric_Int24_MinValue.htm">MinValue</a></td><td>
            Represents the smallest possible value of an Int24. This field is constant.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAGASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_BitRotL.htm">BitRotL</a></td><td>
            Performs rightwise bit-rotation for the specified number of rotations.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_BitRotR.htm">BitRotR</a></td><td>
            Performs rightwise bit-rotation for the specified number of rotations.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_CheckBits.htm">CheckBits</a></td><td>
            Determines if specified <span class="parameter">bits</span> are set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_CheckBits_2.htm">CheckBits</a></td><td>
            Determines if specified <span class="parameter">bits</span> are set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_CheckBits_1.htm">CheckBits</a></td><td>
            Determines if specified <span class="parameter">bits</span> are set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_CheckBits_3.htm">CheckBits</a></td><td>
            Determines if specified <span class="parameter">bits</span> are set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_ClearBits.htm">ClearBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> cleared.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_ClearBits_1.htm">ClearBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> cleared.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_GetMaskedValue.htm">GetMaskedValue</a></td><td>
            Returns value stored in the bits represented by the specified <span class="parameter">bitmask</span>.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_GetMaskedValue_1.htm">GetMaskedValue</a></td><td>
            Returns value stored in the bits represented by the specified <span class="parameter">bitmask</span>.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_SetBits.htm">SetBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_SetBits_1.htm">SetBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> set.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_SetMaskedValue.htm">SetMaskedValue</a></td><td>
            Returns value after setting a new <span class="parameter">value</span> for the bits specified by the <span class="parameter">bitmask</span>.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_SetMaskedValue_1.htm">SetMaskedValue</a></td><td>
            Returns value after setting a new <span class="parameter">value</span> for the bits specified by the <span class="parameter">bitmask</span>.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_BitExtensions_BitExtensions_ToBinaryString.htm">ToBinaryString</a></td><td>
            Encodes <span class="parameter">value</span> as binary, i.e., a string of bit values (0 or 1).
            <br />(Defined by <a href="T_Gemstone_Numeric_BitExtensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_ToggleBits.htm">ToggleBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> toggled.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_Numeric_Int24Extensions_BitExtensions_ToggleBits_1.htm">ToggleBits</a></td><td>
            Returns value with specified <span class="parameter">bits</span> toggled.
            <br />(Defined by <a href="T_Gemstone_Numeric_Int24Extensions_BitExtensions.htm">BitExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Gemstone_Numeric.htm">Gemstone.Numeric Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/numeric/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Numeric/" target="_blank">Gemstone Numeric Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/numeric/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Numeric%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Gemstone%20Numeric%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>